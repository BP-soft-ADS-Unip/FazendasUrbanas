// trabalho de 07/06/24

// incluindo um check em quantidade para que seja sempre >= 0;

BEGIN;
ALTER TABLE colheita_estoque
ADD CONSTRAINT "quantidade_check" CHECK (quantidade >= 0);

\d colheita_estoque;
                                                 Tabela "public.colheita_estoque"
     Coluna     |            Tipo             | OrdenaþÒo | Pode ser nulo |                        PadrÒo
----------------+-----------------------------+-----------+---------------+-------------------------------------------------------
 id_colheita    | integer                     |           | not null      | nextval('colheita_estoque_id_colheita_seq'::regclass)
 data_colheita  | timestamp without time zone |           | not null      |
 quantidade     | integer                     |           | not null      |
 preco_unitario | numeric(10,2)               |           | not null      |
 id_plantio     | integer                     |           |               |
═ndices:
    "colheita_estoque_pkey" PRIMARY KEY, btree (id_colheita)
Restriþ§es de verificaþÒo:
    "colheita_estoque_preco_unitario_check" CHECK (preco_unitario > 0::numeric)
    "quantidade_check" CHECK (quantidade >= 0)
Restriþ§es de chave estrangeira:
    "colheita_estoque_id_plantio_fkey" FOREIGN KEY (id_plantio) REFERENCES plantio(id)
Referenciada por:
    TABLE "item_pedido" CONSTRAINT "item_pedido_id_estoque_fkey" FOREIGN KEY (id_estoque) REFERENCES colheita_estoque(id_colheita)
Gatilhos:
    descontar_area_plantada AFTER INSERT ON colheita_estoque FOR EACH ROW EXECUTE FUNCTION descontar_area()

COMMIT;

// ok!!

 // alterar valor padrão DA TABELA PEDIDO_VENDA do campo  'valor' para 0.00





BEGIN;
ALTER TABLE pedido_venda ALTER COLUMN valor SET DEFAULT 0.00;

\d pedido_venda;

                                           Tabela "public.pedido_venda"
    Coluna     |            Tipo             | OrdenaþÒo | Pode ser nulo |                  PadrÒo
---------------+-----------------------------+-----------+---------------+------------------------------------------
 id            | integer                     |           | not null      | nextval('pedido_venda_id_seq'::regclass)
 data          | timestamp without time zone |           | not null      |
 valor         | numeric(12,2)               |           |               | 0.00
 email_cliente | character varying(90)       |           |               |
═ndices:
    "pedido_venda_pkey" PRIMARY KEY, btree (id)
Restriþ§es de verificaþÒo:
    "pedido_venda_valor_check" CHECK (valor >= 0::numeric)
Restriþ§es de chave estrangeira:
    "pedido_venda_email_cliente_fkey" FOREIGN KEY (email_cliente) REFERENCES cliente(email)
Referenciada por:
    TABLE "item_pedido" CONSTRAINT "item_pedido_id_pedido_fkey" FOREIGN KEY (id_pedido) REFERENCES pedido_venda(id)

 COMMIT;

// trabalho em 08/06/2024
// criar funções e trigger para as tabelas item_pedido e pedido_venda


BEGIN;

CREATE OR REPLACE FUNCTION descontar_quant()
RETURNS trigger AS
$$
	BEGIN
		
		UPDATE colheita_estoque
        SET quantidade = colheita_estoque.quantidade - NEW.quantidade
        
        FROM item_pedido
        WHERE colheita_estoque.id_colheita = NEW.id_estoque;
        

        RETURN NEW;
    END;
$$
LANGUAGE plpgsql;
		

CREATE TRIGGER descontar_area_plantada
AFTER INSERT ON item_pedido 
	FOR EACH ROW
	EXECUTE FUNCTION descontar_quant(); 

COMMIT;

// feito agora hora de testar
// primeiro vamos incluir mais um registro na colheita;

BEGIN;

INSERT INTO colheita_estoque (data_colheita, quantidade, preco_unitario, id_plantio)
VALUES
(CURRENT_TIMESTAMP, 100, 6.00, 38);

select * from propriedade;
 id | tamanho |     rua      | numero |     bairro      |     cidade     | estado |  email_proprietario  |    tipo     | area_plantada
----+---------+--------------+--------+-----------------+----------------+--------+----------------------+-------------+---------------
  4 |       3 | SAUDADE      |     12 | PARAISO         | PETROPOLIS     | RJ     | maiara@gamil.com     | TRADICIONAL |             0
  5 |       7 | PEDRO II     |     75 | CENTRO          | BELO HORIZONTE | MG     | MARCELINO@UNIP.BR    | TRADICIONAL |             0
  6 |       9 | MINAS        |    789 | VILA TIBERIO    | CURITIBA       | PR     | poly@jis             | TRADICIONAL |             0
  7 |      31 | CAXIAS       |     66 | CENTRO          | SÃO PAULO      | SP     | maiara@gamil.com     | TRADICIONAL |             0
  8 |      10 | CARLOS GOMES |     38 | VILA AUGUSTA    | SÃO PAULO      | SP     | MARCELINO@UNIP.BR    | TRADICIONAL |             0
  9 |       7 | SAUDADE      |    835 | CENTRO          | CAMPO GRANDE   | MS     | joaoc@bol.com        | TRADICIONAL |             0
 12 |       7 | 7            |    568 | CENTRO          | Jau            | SP     | marcio@lol.com       | HIDROPONIA  |             0
 13 |      33 | Goias        |     12 | Campos Elisieos | Serrana        | MA     | cidao_p@bol.com      | HIDROPONIA  |             0
  2 |      15 | AURORA       |    135 | VILA TIBERIO    | RIBEIRAO PRETO | SP     | mariathereza@uol.com | HIDROPONIA  |            10
  3 |       5 | GOIAS        |    935 | NOVA ALINÇA     | CAMPINAS       | SP     | marcio@lol.com       | TRADICIONAL |             3
  1 |      25 | AURORA       |     35 | VILA TIBERIO    | RIBEIRAO PRETO | SP     | MARCELINO@UNIP.BR    | HIDROPONIA  |             0
(11 linhas)


COMMIT;

// SO FAR SO GOOD;
// VERIFICAÇÕES

SELECT * FROM colheita_estoque;
 id_colheita |       data_colheita        | quantidade | preco_unitario | id_plantio
-------------+----------------------------+------------+----------------+------------
          13 | 2024-06-07 05:56:29.687576 |         70 |           5.10 |         37
          14 | 2024-06-08 09:58:02.293266 |        100 |           6.00 |         38
SELECT * FROM info_colheita;
 id_colheita |        data_plantio        |       data_colheita        | prod_agricola | area_m2 | quantidade | rendimento | preco_unitario
-------------+----------------------------+----------------------------+---------------+---------+------------+------------+----------------
          13 | 2024-01-01 08:00:00        | 2024-06-07 05:56:29.687576 | ALFACE        |       2 |         70 |         35 |           5.10
          14 | 2024-06-06 07:42:50.842622 | 2024-06-08 09:58:02.293266 | COUVE         |      10 |        100 |         10 |           6.00
SELECT * FROM info_plantio;
 id | tamanho |    tipo     | area_plantada | prod_agricola | area_m2 |        data_plantio
----+---------+-------------+---------------+---------------+---------+----------------------------
 37 |       5 | TRADICIONAL |             3 | ALFACE        |       2 | 2024-01-01 08:00:00
 38 |      25 | HIDROPONIA  |             0 | COUVE         |      10 | 2024-06-06 07:42:50.842622
 40 |       5 | TRADICIONAL |             3 | AGRIAO        |       3 | 2024-01-01 08:00:00
 41 |      15 | HIDROPONIA  |            10 | COUVE         |      10 | 2024-06-06 16:13:00.019929

// DE 4 PLANTAÇÕES já foram colhidas 2 e essas duas estão disponíveis para venda em estoque;

// já podemos realizar um pedido e depois escolher os itens que vamos comprar. nesse sentido já vamos testar a primeira trigger

BEGIN;

INSERT INTO pedido_venda (data, email_cliente)
VALUES
(CURRENT_TIMESTAMP, 'filinha@papai.com');

SELECT * FROM pedido_venda;
 id |            data            | valor |   email_cliente
----+----------------------------+-------+-------------------
  1 | 2024-06-08 10:10:04.097249 |  0.00 | filinha@papai.com
(1 linha)


COMMIT;

// SO FAR SO PERFECT!!!
// vamos escolher os itens!!

BEGIN;

INSERT INTO item_pedido (quantidade, id_estoque, id_pedido)
VALUES
(2, 13, 1);

SELECT * FROM colheita_estoque;
 id_colheita |       data_colheita        | quantidade | preco_unitario | id_plantio
-------------+----------------------------+------------+----------------+------------
          14 | 2024-06-08 09:58:02.293266 |        100 |           6.00 |         38
          13 | 2024-06-07 05:56:29.687576 |    -> ->68 |<- <-      5.10 |         37 
SELECT * FROM item_pedido;
 id | quantidade | id_estoque | id_pedido
----+------------+------------+-----------
 11 |          2 |         13 |         1

 COMMIT;

 // OK!! agora fazer update no valor da tabela pedido_venda

BEGIN;

UPDATE pedido_venda
SET valor = colheita_estoque.preco_unitario * item_pedido.quantidade
FROM item_pedido, colheita_estoque
WHERE pedido_venda.id = item_pedido.id_pedido;

SELECT * FROM pedido_venda;
 id |            data            | valor |   email_cliente
----+----------------------------+-------+-------------------
  1 | 2024-06-08 10:10:04.097249 | 12.00 | filinha@papai.com
(1 linha)


COMMIT;

// então vamos fazer a função e trigger para atualizar o valor do pedido_venda

BEGIN;

CREATE OR REPLACE FUNCTION somar_valor()
RETURNS trigger AS
$$
	BEGIN
		
		UPDATE pedido_venda
		SET valor = pedido_venda.valor + (colheita_estoque.preco_unitario * NEW.quantidade)
		FROM item_pedido, colheita_estoque
		WHERE pedido_venda.id = NEW.id_pedido;
		        

        RETURN NEW;
    END;
$$
LANGUAGE plpgsql;
		

CREATE TRIGGER somar_valor_pedido
AFTER INSERT ON item_pedido 
	FOR EACH ROW
	EXECUTE FUNCTION somar_valor(); 

COMMIT;

// feito agora hora de testar
// 

BEGIN;

INSERT INTO item_pedido (quantidade, id_estoque, id_pedido)
VALUES
(5, 14, 1);

SELECT * FROM item_pedido;
 id | quantidade | id_estoque | id_pedido
----+------------+------------+-----------
 11 |          2 |         13 |         1
 12 |          5 |         14 |         1 <- <-
(2 linhas)


fazendau=*#
fazendau=*# SELECT * FROM pedido_venda;
 id |            data            | valor |   email_cliente
----+----------------------------+-------+-------------------
  1 | 2024-06-08 10:10:04.097249 | 37.50 | filinha@papai.com <- <-  o valor antes era 12.00
(1 linha)


fazendau=*#
fazendau=*# SELECT * FROM colheita_estoque;
 id_colheita |       data_colheita        | quantidade | preco_unitario | id_plantio
-------------+----------------------------+------------+----------------+------------
          13 | 2024-06-07 05:56:29.687576 |         68 |           5.10 |         37
          14 | 2024-06-08 09:58:02.293266 |         95 |           6.00 |         38 <- <- a quantidade era 100
(2 linhas)


fazendau=*# COMMIT;
COMMIT

// perfect !!!